# Alisher Alimkanov

# Задание 1:
# У вас есть идея создать Back-end для игры: "Угадай число."
# Данный код генерирует рандомное число.
###################
# import random as rd
# random_number = rd.randint(0,10)
# print(random_number)
###################
# С помощью функции:
#    my_number = int(input("Введите число: "))
# спрашивайте число от пользователя.
# Запустите бесконечный цикл!
# И пытайтесь спрашивать у пользователя какое-то число каждый раз.
# Если пользователь угадал число которое сгенерировал компьютер остановите цикл и скажите пользователю - "Вы угадали!"
# Если пользователь не угадал вы снова спросите у него число.
# Если пользователь 3 раза подряд не угадал число, вы останавливаете цикл и говорите: "Вы проиграли..."
#######################################################################
# import random as rd
# random_number = rd.randint(0,10)
# print(random_number)
# trying = 0
#
# while True:
#     try:
#         my_number = int(input("Введите число: "))
#         trying += 1
#         if my_number == random_number:
#             print('Вы угадали ')
#             break
#         elif trying == 3:
#             print('Вы проиграли !')
#             break
#         elif my_number != random_number:
#             print('Не угадали ')
#             continue
#     except ValueError:
#         print('Value nafig!!!!!')


# Задание 2:
        # Напишите программу, которая циклично запрашивает у пользователя номера символов по таблице Unicode и выводит соответствующие им символы.
        # Завершает работу при вводе нуля.
###################################################################
# while True:
#     try:
#         A = int(input("Введите номер символа Юникод: "))
#         if A > 0:
#             print(chr(A))
#             continue
#         else: A == 0
#         break
#     except ValueError:
#         print("VAlue Error!")






# Задание 3:
        # Напишите программу, которая измеряет длину введенной строки.
        # Если строка длиннее десяти символов, то выносится предупреждение.
        # Если короче, то к строке добавляется столько символов *, чтобы ее длина составляла десять символов, после чего новая строка должна выводиться на экран.
###################################################################

# s = input("введите строку: ")
# if len(s) > 10:
#     print(len(s), 'Строка не должна быть длиннее 10 сиимволов!')
# else:
#     for x in range(len(s), 10):
#         s += "*"
#     print(s)



# Задание 4:
        # Напишите программу, которая запрашивает у пользователя шесть вещественных чисел.
        # На экран выводит минимальное и максимальное из них, округленные до двух знаков после запятой.
        # Выполните задание без использования встроенных функций min() и max().
####################################################################

list_1 = []
count = 0


while True:
    float_number = (float(input("Введите вещественное число ")))
    count += 1
    list_1.append(float_number)

    if count == 6:
        sorted_list = sorted(list_1)
        result_1 = sorted_list[0]
        result_2 = sorted_list[-1]
        print(round(result_1, 2))
        print(round(result_2, 2))
    elif count > 6:
        print("Неверно!")
        break


#Ismail

# Задание 13:
# Напишите программу, где исходный список содержит положительные и отрицательные числа.
#     Требуется положительные поместить в один список, а отрицательные - в другой.


# x = [-1, 4, -2, 5, 0, -5, 10, 7, -4, -9]
#
# x_negative = [i for i in x if i < 0]
# x_positive = [i for i in x if i >= 0]
#
# print(f'Не чётный:{x_negative}\nЧётный:{x_positive}')

###################################################################################################################
#
# Задание 14:
#     Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12), и возвращающую время года, которому
#     этот месяц принадлежит (зима, весна, лето или осень).

# try:
#     s = int(input('введите номер месяца: '))
#     def season(s):
#         if s == 12 or 1 <= s <= 2:
#               print("Зима")
#         elif  3 <= s <= 5:
#               print("Весна")
#         elif 6 <= s <= 8:
#                print("Лето")
#         elif 9 <= s <= 11:
#               print("Осень")
#         else:
#             print("Неверно введён номер месяца!")
#         n = int(input("Введите номер месяца (1-12): "))
# except:
#     print('необходимо вводить цифрами')
#
# season(s)

###################################################################################################################
# Задание 15:

# Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых (каждый год размер его вклада
# увеличивается на 10%. Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты).
# Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.

# try:
#     def bank():
#         a = int(input("Сколько денег хотите вложить:"))
#         y = int(input("На сколько лет?"))
#         for i in range(y):
#             a += int(a * 0.1)
#         return a
#     print(f'ваш общий счет составляет {bank()} баблишек')
# except:
#     print('неправельный ввод. повторите попытку')
###################################################################################################################

# Задание 16:
#     Несколько дней подряд метеоролог измеряет температуру воздуха в своём городе. Ваша программа считывает
#     измеренные им значения и выводит среднее значение температуры за время измерений. Чтобы обозначить конец
#     ввода данных, вводится значение, меньшее -300 (реальная температура не может быть ниже -273.15).
#     При проведении вычислений с действительными числами ответ может незначительно отличаться от математически
#     правильного из-за погрешностей округления; это не повлияет на проверку решения.

# try:
#     temp = [float(input('введите температуру:  №{}: '.format(i))) for i in range(1, 6)]
#     while temp != -275:
#         break
#     print(f'среднняя температура состовляет: {sum(temp) / 5}')
# except:
#     print('неправельный ввод. повторите попытку')